http://13.127.67.252:5040/ReachAnaProcess/


{
    "data": {
        "p1": null,
        "p2": "1104",
        "p3": "1",
        "p4": null,
        "p5": null,
        "p6": null,
        "p7": null,
        "p8": null,
        "p9": null,
        "p10": null,
        "PageIndex_int": 1,
        "PageSize_int": 10,
        "Type_varchar": "ANALYSISDETAILSALL",
        "UserGroupKey": "2112",
        "UserAccessKey": "124"
    }
}





PUBLIC CHANNELS

+
Off-Topic
Production
More...
PRIVATE CHANNELS

+
DIRECT MESSAGES

+
hussain
ijas_ahamed
kareem
tahseen
thoufeeq_it
vignesh
yousuf
More...

Offline

Add a channel description

Search


Sat, Jun 14, 2025
	
vignesh
9:40 AM
https://smartfm.cloud/Android_GlobalService/CollectCurrentReleaseURL1.php?ProjectKey=${userkeys}

userkeys => V5APP ; Certifyapp ;

let Params = {
      "data": [
        {
          "P1": ""
          , "P2": ""
          , "P3": WoNo ? WoNo : ""
          , "P4": Timeformate
          , "P5": null
          , "P6": null
          , "P7": null
          , "P8": Description.replace(/[^a-zA-Z0-9 ]/g, '')
          , "P9": ""
          , "P10": ""
          , "P11": "0"
          , "P12": 0
          , "P13": 0
          , "P14": "0"
          , "P15": ComplaintNatureIDPK ? "" : ComplaintNatureName
          , "P16": "0"
          , "P17": "0"
          , "P18": ""
          , "P19": null
          , "P20": 0
          , "P21": "0"
          , "P22": "0"
          , "P23": ResponseByTimes ? ResponseByTimesConvert : ""
          , "P24": AnalysedByTimes ? AnalysedByTimesConvert : ""
          , "P25": null
          , "P26": FixedByTimes ? FixedByTimesConvert : ""
          , "P27": null
          , "P28": 0
          , "P29": 0
          , "P30": 0
          , "P31": 0
          , "P32": 0
          , "P33": 0
          , "P34": 0
          , "P35": 0
          , "P36": 0
          , "P37": 0
          , "P38": ""
          , "P39": 0
          , "P40": "0"
          , "P41": 0
          , "P42": ""
          , "P43": ""
          , "P44": 0
          , "P45": ""
          , "P46": ""
          , "P47": ""
          , "P48": ""
          , "P49": "0"
          , "P50": null
          , "P51": ContractIDPK ? ContractIDPK : null
          , "P52": LocationIDPK ? LocationIDPK : null
          , "P53": BuildingIDPK ? BuildingIDPK : null
          , "P54": FloorIDPK ? FloorIDPK : null
          , "P55": SpotIDPK ? SpotIDPK : null
          , "P56": PriorityID ? PriorityID : null
          , "P57": DivisionID ? DivisionID : null
          , "P58": DisciplineIDPK ? DisciplineIDPK : null
          , "P59": "0"
          , "P60": ComplaintNatureIDPK ? ComplaintNatureIDPK : null
          , "P61": "6" // 11 in Web View
          , "P62": ServiceTypeIDPK ? ServiceTypeIDPK : null
          , "P63": null
          , "P64": "4"
          , "P65": cstate.complaintassetdata.length > 0 ? "2" : "1"
          , "P66": ComplaintTypeIDPK ? ComplaintTypeIDPK : null
          , "P67": null
          , "P68": null
          , "P69": cstate.complaintassetdata.length > 0 ? cstate.complaintassetdata[0].AssetIDPK : null
          , "P70": null
          , "P71": null
          , "P72": "1"
          , "P73": "0"
          , "P74": UserID
          , "P75": Timeformate
          , "P76": UserID
          , "P77": Timeformate
        }
      ]
    }
Show more
	
vignesh
11:50 AM
const message = status.message;
            const Username = res.Output.data.p1;
            const UserID = JSON.stringify(res.Output.data.p2);
            const SessionID = res.Output.data.p3;
            const UserGroupID = res.Output.data.p5;
            const EmployeeID = JSON.stringify(res.Output.data.p6);
            const ProductID = res.Output.data.p8;
            const Password = res.Output.data.p12;
            const IsBTCTech = res.Output.data.p17;
            const FAImgMan = res.Output.data?.p18;

            const DecodedSessionID = atob(SessionID)
            const DecodedUserGroupID = atob(UserGroupID)
            const DecodedProductID = atob(ProductID)
            const DecodedPassword = atob(Password)

            console.log({
              "Message": message,
              "Username": Username,
              "UserID": UserID,
              "SessionID": SessionID,
              "UserGroupID": UserGroupID,
              "EmployeeID": EmployeeID,
              "ProductID": ProductID,
              "Password": Password,
              "IsBTCTech": IsBTCTech,
              "FAImgMan": FAImgMan,
              "DecodedSessionID": DecodedSessionID,
              "DecodedUserGroupID": DecodedUserGroupID,
              "DecodedProductID": DecodedProductID,
              "DecodedPassword": DecodedPassword
            })

            cdispatch({ type: "UserName", payload: Username });
            cdispatch({ type: "EmployeeId", payload: EmployeeID });
            cdispatch({ type: 'VisibleSessionLogout', payload: false });

            await storeData("Username", Username);
            await storeData("UserGroupID", DecodedUserGroupID);
            await storeData("EmployeeID", EmployeeID);
            await storeData("UserID", UserID);
            await storeData("ProductID", DecodedProductID);
            await storeData("Password", DecodedPassword);
            await storeData("SessionID", SessionID);
Show more
        const UserID = JSON.stringify(res.Output.data.p2);
	
vignesh
2:55 PM
async function getUserData(userKey) {
  try {
    // Replace this URL with your actual API endpoint
    const url = `https://api.example.com/users/${userKey}`;
    
    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        // Add authentication headers if needed
        // 'Authorization': `Bearer ${userKey}`,
        // or
        // 'X-API-Key': userKey
      }
    });

    // Check if the response is successful
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    // Parse and return the JSON response
    const data = await response.json();
    return data;
    
  } catch (error) {
    console.error('Error fetching user data:', error);
    throw error; // Re-throw the error so caller can handle it
  }
}
	
afsal
5:41 PM
import React, { useState ,useEffect} from 'react'
import { View, Text, Image, Button, StyleSheet, TextInput, Alert } from 'react-native'

import  AsyncStorage  from '@react-native-async-storage/async-storage';
import Home from './Home';
import {encode as btoa} from 'base-64'

export default function Login({navigation}) {
  const [username, setusername] = useState('')
  const [password, setpassword] = useState('')

useEffect(() => {
 Saved_Data()
}, [])

   const Saved_Data= async()=>{
      try{
      const username=await AsyncStorage.getItem('username')
      const password=await AsyncStorage.getItem('password')
      console.log('Saved Username Async:',username)
      console.log('Saved  Password Async:',password)
      if (username && password){
        navigation.navigate('Home') //replace use  pandarthu kku  (back pogathu login page kku) 
      }
      else{

        console.log("Stays here itself")
      }
    } catch (error){
      console.log('Error reading Aysnc:',error);
    }
  }
  const handlePress = async () => {
    const validusername = "sharuk";
    const validpassword = "123456";

if (!username.trim()) {
  Alert.alert('Validation Error', 'Username field is required ')
  return
}
else if (!password.trim()) {
  Alert.alert('Validation Error', 'Password field is required')
  return
}
else if (username !== validusername || password !== validpassword) {
  const wrong =
    username !== validusername ? 'Invalid Username'
      :
      password !== validpassword ? ' Invalid Password ' : 'Invalid Username or Password';

  Alert.alert('Validation Error', wrong);
  return;
}


const encodedUsername=btoa(username)
const encodedPassword=btoa(password)

console.log('Encoded Username:',encodedUsername)
console.log('Encoded Password:',encodedPassword)


try{
    const response= await fetch('http://13.127.67.252:5040/FPU20S3/',{
      method:'POST',
      headers:{
        'Content-Type':'application/json'
      },
      // Minimum Login-ku Required
      // p1 p2 user credentials base64 la
      //p3â€“p6  app name user type  and action (login) send pannuradhu
      body:JSON.stringify({
        data:{
          p1: btoa(username),
          p2: btoa(password),
          p3:'',
          p4:'1',
          p5:'Reach',
          p6:'login',
        },
      }),
    });


  const result= await response.json() //Response JSON format-la edukkurathu
console.log('API Response:',result);

const statusCode =result?.Output?.status?.code;
if(statusCode === '200'){
  Alert.alert('Success','Login Sucessfully');
  await AsyncStorage.setItem('username',username)
  await AsyncStorage.setItem('password',password)

  navigation.navigate(Home)
  console.log('Login Successfully and Home Page Move:')
}
  else {
    const errormsg=result?.Output?.status?.message || 'Login Failed '
    Alert.alert('Login Error:',errormsg)
    console.log('Login Error:',errormsg)
  }
    }
    catch (error) {
      console.log('API Error:',error)
     Alert.alert('Error',"Something went Wrong")
    }

  }
  return (
    <View style={styles.container
    }>
      <Text style={styles.title}>Login Page</Text>
      <Image source={require('../assets/image/Login_page_Background.png')} style={styles.image} />

  <TextInput placeholder='Name' placeholderTextColor='#0073ff' onChangeText={setusername} style={styles.input} />
  <TextInput placeholder='Password' placeholderTextColor='#0073ff' onChangeText={setpassword} secureTextEntry={true} style={styles.input} />

  <Button title='logins' onPress={handlePress} />

</View>
  );
}
const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    justifyContent: 'center',
    backgroundColor: '#fff',
  },
  image: {
    width: 150,
    height: 150,
    borderRadius: 100,
    alignSelf: 'center',
    marginBottom: 50,
  },
  title: {
    fontSize: 24,
    textAlign: 'center',
    marginBottom: 50,
    fontWeight: 'bold',

  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    paddingHorizontal: 15,
    marginBottom: 8,
    color:'#0073ff',
    borderRadius: 5,
  },
});

/* sharuk /
/ 123456 */

Show more
Login.js
JS4KB
	
vignesh
5:42 PM
https://claude.ai/public/artifacts/233ac318-8827-4c6b-8c51-5cdcea4b3dc6

	
vignesh
5:51 PM
Login.js
JS3KB
Tue, Jun 17, 2025
	
vignesh
10:55 AM
 <StatusBar barStyle="light-content" backgroundColor="transparent" translucent />

Yesterday
	
afsal
12:25 PM
vignesh annaw mobile tharigala emulator run agamattikuthu tab la design change aguthu 

	
vignesh
2:45 PM
http://13.127.67.252:5040/ReachAnaProcess/


{
    "data": {
        "p1": null,
        "p2": "1104",
        "p3": "1",
        "p4": null,
        "p5": null,
        "p6": null,
        "p7": null,
        "p8": null,
        "p9": null,
        "p10": null,
        "PageIndex_int": 1,
        "PageSize_int": 10,
        "Type_varchar": "ANALYSISDETAILSALL",
        "UserGroupKey": "2112",
        "UserAccessKey": "124"
    }
}
Today
	
afsal
12:31 PM
anna

sathiyama therile ethu nu 

konjo help pannuge

	
vignesh
12:32 PM
No need to worry

u have already done this 

	
afsal
12:32 PM
first anta design panni muduchurre

	
vignesh
12:32 PM
with static data

so its simple 

first design and ask me 

	
afsal
12:32 PM
thank you

	
vignesh
12:34 PM
thunder-collection_Reach Pro.json
JSON1KB
	
afsal
3:51 PM
anna

	
vignesh
3:52 PM
Try panu

after 4 

we will try 

4.20

	
afsal
5:12 PM
Vignesh anna pathukala pathukala

Write to vignesh

No file chosen

Help
{
    "clientName": "Thunder Client",
    "collectionName": "Reach Pro",
    "collectionId": "e4cc26d9-7868-407f-82f7-0393c3b0719c",
    "dateExported": "2025-06-19T07:04:37.429Z",
    "version": "1.2",
    "folders": [],
    "requests": [
        {
            "_id": "daea17ce-db58-4938-b777-1f17ffaf75a4",
            "colId": "e4cc26d9-7868-407f-82f7-0393c3b0719c",
            "containerId": "",
            "name": "Reach - Analysis API Call",
            "url": "http://13.127.67.252:5040/ReachAnaProcess/",
            "method": "POST",
            "sortNum": 50000,
            "created": "2025-06-19T07:03:40.105Z",
            "modified": "2025-06-19T07:03:40.105Z",
            "headers": [
                {
                    "name": "User-Agent",
                    "value": "\"L"
                }
            ],
            "body": {
                "type": "json",
                "raw": "{\n    \"data\": {\n        \"p1\": null,\n        \"p2\": \"1104\",\n        \"p3\": \"1\",\n        \"p4\": null,\n        \"p5\": null,\n        \"p6\": null,\n        \"p7\": null,\n        \"p8\": null,\n        \"p9\": null,\n        \"p10\": null,\n        \"PageIndex_int\": 1,\n        \"PageSize_int\": 10,\n        \"Type_varchar\": \"ANALYSISDETAILSALL\",\n        \"UserGroupKey\": \"2112\",\n        \"UserAccessKey\": \"124\"\n    }\n}",
                "form": []
            }
        }
    ],
    "ref": "g_5iIUl3F0eWMTErZCE5aYFexURBsamHbmmtUJkTkc5nIkM8xacxZ3VLZ1IL1u_ZCS7s-LIjm_KzXMBSrKqU5g"
}
File 1 of 1
Download